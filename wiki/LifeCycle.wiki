#summary 活動的生命週期
#labels tw, lifecycle

{{{
編寫中
}}}

{{{
維護一個 Activity 的生命週期非常重要，因為 Activity 隨時會被系統關掉。
}}}

== 生命週期 ==

作者在初級章節中一直努力地傳達給讀者：編寫 Android 平台的基本應用程式，跟編寫桌面應用程式的難度，兩者並沒什麼不同。甚至因為 Android 平台擁有免費、跨平台的開發工具，而讓 Android 平台應用程式的開發，更為單純。

但是請別忘了，Android 是個手機作業系統。手機的特性就是隨時可能在未完成目前動作的時候，離開正在使用的應用程式 (Activity) -- 手機要隨時準備切換到接電話、接收簡訊模式...你會希望接完電話回來應用程式時，還看到一樣的內容。

現在使用者使用智慧型手機，大多習慣多工(Multi-Task)系統，可以同時執行多個程式。同時執行多個程式也有嚴重的缺點，即每執行一個程式就會耗費一些系統記憶體，當同時執行的程式過多，或是關閉的程式沒有正確釋放掉記憶體，執行系統時就會覺得越來越慢，甚至不穩定。

為了解決這個問題， Android 引入了一個新的機制 -- 生命週期 (Life Cycle)

參考資料

  * Activity Cycle http://www.anddev.org/images/android/activity_lifecycle.png

= 結語 =

這幾章講解了如何撰寫介面、如何撰寫程式碼、如何新增選單，與應用程式如何在多個 Activity 之間切換。了解了這些內容，已足夠我們寫出一般的 Android 應用程式。

Android 是個完整的平台，還有諸多內容值得研究。例如儲存資料、共享內容、網路、瀏覽器、地圖服務、相機、3D、遊戲、通話與簡訊等等進階的主題。

希望讀者能以此小書出發，開發出自己的 Android 程式。

請別吝於留言反應，寫出自己的讀後感言、提出覺得不解的地方、分享自己的經驗。這些都可以協助你更好的學習 Android。如果覺得有那些小地方漏講，也請您直接在該章後加上您的建議。協助其他人，就是協助當初的自己。

== 版權宣告 ==

誠摯地提醒您，本書仍在持續地完善中。本書的文字、圖片、程式碼皆不歡迎轉載，也不可使用於商業用途。
但歡迎您將本書網址 http://code.google.com/p/androidbmi/wiki/IntroAndroid 分享到各網站。

== 填寫讀後問卷 ==

如果您花時間讀了本書，請幫忙填寫只有4題的[http://spreadsheets.google.com/viewform?key=pftJzzqckPIll5elBVuuDWQ 讀後問卷]，以協助改善本書。

< [AndroidDebug 記錄與偵錯 (Log)]  | [DiveIntoAndroid 回目錄] | [AndroidPreference 儲存資訊] >