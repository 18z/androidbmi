#summary 傳送資料到新 Activity
#labels tw, Intent

前一章中，我們已學過獨立的 Activity。Android 使用 Intent 來完成在螢幕間切換的動作。Intent 包含切換所需的動作、分類、傳送資料等訊息，就像是 Activity 之間的宅急便一樣。

因此當我們得在 Activity 之間交換資料時，需要先了解 Intent 的用法。

Intent 可以分為兩種類型：「現成的 Intent」與「自訂的 Intent」。使用現成的 Intent 的例子，可以參考「[AndroidUrl 初見 Intent]」一章。在 Android 清單中作設定時，我們還可以使用 IntentFilter，來過濾和找尋對應的 Intent。而一般開發者在程式中所自行撰寫的 Intent，則是透過自訂 Intent 來做很多事情。比如切換 Activity、在其間傳遞各式的資料。

要完成在 Activity 之間透過 Intent 傳送資訊的動作，可以分成「傳遞資訊」與「接收資訊」兩部分。

== 使用 Intent 傳遞資訊 ==

上一章的範例中，我們新增了一個 Report Activity 頁面，但是還沒有為新頁面填入實值內容。在本章中我們會完成將 BMI 應用程式從一個頁面改寫成為兩個頁面：「輸入頁面」(原本的 Bmi Activity)，與「結果頁面」(Report Activity)的應用程式。「輸入頁面」從介面上取得身高、體重值，透過傳送 Intent，將值攜帶到「結果頁面」。「結果頁面」從 Intent 中取出其攜帶的身高、體重值，用這兩個參數來產生 BMI 報告結果。

打開 「src/com/demo/android/bmi/Bmi.java」，修改「Button.OnClickListener」 函式：

{{{
    private Button.OnClickListener calcBMI = new Button.OnClickListener()
    {
    	public void onClick(View v)
    	{	
    		//Switch to report page
    		Intent intent = new Intent();
            intent.setClass(Bmi.this, Report.class);
            Bundle bundle = new Bundle();
            bundle.putString("KEY_HEIGHT", field_height.getText().toString());
            bundle.putString("KEY_WEIGHT", field_weight.getText().toString());
            intent.putExtras(bundle);
            startActivity(intent);
    	}
    };
}}}

=== 講解 ===

{{{
Intent intent = new Intent();
intent.setClass(Bmi.this, Report.class);
...
startActivity(intent);
}}}

是的，如果你真的有學懂上一章的內容，那麼你可能會發現：我們準備講解的這段程式碼主體，與上一章中所提到的程式碼其實一模一樣。這段程式碼的作用是透過 Intent 通知系統(Dalvik 虛擬機)：我們將要從 Bmi Activity 這個頁面（輸入頁面）前往 Report Activity 頁面（結果頁面）。如果把我們多加的用來附加資料的程式碼拿掉，這段程式碼即原來獨立的 Activity 的程式碼。

{{{
Bundle bundle = new Bundle();
...
intent.putExtras(bundle);
}}}

相依的 Activity 與獨立的 Activity 不同之處，就在於相依的 Activity 會附帶傳送額外資訊到新的 Activity。這些額外資訊都是靠著 Intent 物件來攜帶的。

傳送 intent 時，我們可以在其上附加一些訊息，比如說本例中我們從輸入介面中取出了的身高、體重值，要將身高、體重值傳送給 Report Activity 後作計算。這些附加在 Intent 上的訊息都儲存在 Bundle 物件中。透過「intent.putExtras(bundle)」敘述，我們將「bundle」 物件附加在 Intent 上，隨著 Intent 送出而送出。

{{{
bundle.putString("KEY_HEIGHT", field_height.getText().toString());
bundle.putString("KEY_WEIGHT", field_weight.getText().toString());
}}}

這段是實際用來附加資料的程式碼。將身高、體重值儲存到 bundle 物件中。
「KEY_HEIGHT」、「KEY_WEIGHT」是我們自己為儲存在 bundle 物件中的身高、體重值所指定的識別符號。在這邊我們直接把身高、體重值都儲存成字串。因為整個程式都是我們控制，到時候接收的 Activity 讀出值來以後再去做型別轉換就好了。這麼一來就省下了一次型別轉換的功夫。

== 使用 Intent 接收資訊 ==

用作接收 Intent，透過 Intent 攜帶的資訊來計算出 BMI 值的「src/com/demo/android/bmi/Report.java」完整程式碼如下：

{{{
package com.demo.android.bmi;

import java.text.DecimalFormat;
import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

public class Report extends Activity {
	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle icicle) {
		super.onCreate(icicle);
		setContentView(R.layout.report);
		findViews();
		showResults();
		setListensers();
	}

	private Button button_back;
    private TextView view_result;
    private TextView view_suggest;

    private void findViews()
    {
    	button_back = (Button) findViewById(R.id.report_back);
    	view_result = (TextView) findViewById(R.id.result);
    	view_suggest = (TextView) findViewById(R.id.suggest);
    }

    //Listen for button clicks
    private void setListensers() {
    	button_back.setOnClickListener(backMain);
    }
    
    private Button.OnClickListener backMain = new Button.OnClickListener()
    {
        public void onClick(View v)
        {
           // Close this Activity
           Report.this.finish();              
        }
    };

    private void showResults() {
    	DecimalFormat nf = new DecimalFormat("0.00");

    	Bundle bunde = this.getIntent().getExtras();
    	double height = Double.parseDouble(bunde.getString("KEY_HEIGHT"))/100;
    	double weight = Double.parseDouble(bunde.getString("KEY_WEIGHT"));
        double BMI = weight / (height * height);
        view_result.setText(getString(R.string.bmi_result) +nf.format(BMI));
        
        //Give health advice
        if(BMI>25){
            view_suggest.setText(R.string.advice_heavy);
        }else if(BMI<20){
            view_suggest.setText(R.string.advice_light);
        }else{
            view_suggest.setText(R.string.advice_average);
        }

    }
}
}}}

=== 講解 ===

整個程式的架構我們在「[BmiLogic 完成 BMI 程式]」與「[BmiRefactor 重構程式]」兩章中已經詳細說明過了。

{{{
Bundle bunde = this.getIntent().getExtras();
}}}
當我們透過 Intent 傳到新的 Activity 後，只要使用 Activity.getIntent() 函數，就可以得到傳來的 Intent 物件。然後使用「getExtras」函式，就能取得附加在 Intent 上的 bunde 物件。

{{{
		double height = Double.parseDouble(bunde.getString("KEY_HEIGHT"))/100;
		double weight = Double.parseDouble(bunde.getString("KEY_WEIGHT"));
}}}

在當前的 Activity 取得了 bundle 物件後，我們可以透過指定儲存在 bundle 物件中的身高、體重值的識別符號「KEY_HEIGHT」、「KEY_WEIGHT」來取出身高、體重值的資料。由於我們傳參數值來時，所使用的是是字串格式，所以我們在此得做個型別轉換，將參數從字串轉換成雙倍精度浮點數(Double)型別。


{{{
    private Button.OnClickListener backMain = new Button.OnClickListener()
    {
        public void onClick(View v)
        {
           // Close this Activity
           Report.this.finish();              
        }
    };
}}}

當按下 backMain 按鈕元件後，結束 Report Activity，顯示出原本的 Bmi Activity。


== 不透過 Bundle 交換資訊 ==

使用 Intent 傳遞資訊時，我們看到可以用「setClass」方法來指定要傳送到的 Activity。我們也可以使用類似的「setString」、「setInt」方法來指定要透過 Intent 附帶傳送的參數。

在使用 Intent 接收資訊時，我們再使用「this.getIntent().getData()」方法就能取到參數了。「getData」方法取到的參數一般是字串型態的。
若事先已經知道傳來參數的型別，還可以用比「getData」方法更精確的「getString」、「getInt」等方法來取得參數值。

不過既然有好用的 Bundle 類別可用，為什麼要自己把事情變得複雜呢？


= 結語 =

這幾章講解了如何撰寫介面、與如何寫出一般的 Android 應用程式。

Android 是個完整的平台，還有諸多內容值得研究。例如儲存資料、共享內容、網路、SMS、Google Map、Web Cam、3D、遊戲、Webkit、XMPP 等等進階的主題。

希望讀者能以此小書出發，開發出自己的 Android 程式。

請別吝於留言反應，寫出自己的讀後感言、提出覺得不解的地方，分享自己的經驗，這些都可以協助你更好的學習 Android。

== 版權宣告 ==

誠摯地提醒您，本書仍在持續地完善中。本書的文字、圖片、程式碼皆不歡迎轉載，也不可使用於商業用途。
但歡迎您將本書網址 http://code.google.com/p/androidbmi/wiki/IntroAndroid 分享到各網站。

== 填寫讀後問卷 ==

如果您花時間讀了本書，請幫忙填寫只有4題的[http://spreadsheets.google.com/viewform?key=pftJzzqckPIll5elBVuuDWQ 讀後問卷]，以協助改善本書。


< [AndroidActivity 加入新 Activity]  | [DiveIntoAndroid 回目錄] | [AndroidDebug 記錄與偵錯] >