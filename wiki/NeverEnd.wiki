#summary 開發不息
#labels tw

{{{
一個階段的結束，是另一個階段的開始。
}}}

我們來回顧前面所學，並重新檢視我們對 BMI 應用程式所做的設計。

在「設計使用者介面」一章，我們這樣描述BMI應用程式所需的介面元件：「為了輸入 BMI 程式所需的身高體重值，大致上我們需要兩個 TextView 元件用來提示填入身高體重數字，另外也需要兩個文字輸入欄位用來填入身高體重數字。我們還需要一個按鈕來開始計算，而計算完也需要一個 TextView 元件來顯示計算結果。」

我們根據上述的設計，撰寫了 BMI 應用程式，並打算發佈到 Android Market 上。

BMI 應用程式的功能算是很完整了。但是仔細想想，可能你也會意識到，現在的BMI 應用程式其實存在一些不對勁的地方。

嗯，請讀者們花點時間想一想。

什麼地方不對勁呢？


== BMI 應用程式設計的缺陷 ==

首先，「應用程式的目的應該是寫給使用者使用的。」應該沒有人有異議。
那麼本書寫作的階段， Android Market 才準備開放，第一批的 Android 手機(T-Mobile G1)才剛寄送到第一批使用者手裡，這些使用者期望的應用程式，應該是會是什麼樣子呢？

......

喔！我們的第一批使用者是一堆美國人！

{{{
讀者：美國人又怎樣？

作者：噫，再仔細想想，並回來檢視看看我們的應用程式介面吧。

讀者：哇哇哇，BMI 應用程式的使用者介面，用的是「中文」。

作者：不錯，讀者您已經有獨立思考的能力了。

讀者：知道問題後，這其實很好辦，只要把「res/value/string.xml」中的字串換成英文，重新編譯一下就好啦，不是什麼大問題啦(挺胸)。

作者：嘿嘿，我鋪這麼久的梗，BMI 應用程式怎麼可能只存在這個問題哩(魔王貌)，再從「美國人」這個關鍵點再想想。

讀者：...... 我知道了，在BMI應用程式中，我們使用的身高體重單位是公分、公斤，但是看美國 NBA 時，那些人的身高體重好像是用不一樣的度量單位算的！作者，你你你...好毒呀(捧心)！

作者：還是被你看出來啦。
}}}

下一階段的學習，就是試著將 BMI 應用程式改成目標使用者「美國人」所適用的 BMI 應用程式(英制)。在下一階段中，除了複習前面章節用到的技巧外，還會講到如何支援多國語言，並用到 spinner、 List、ArrayAdapter 等等元件來改善操作可用性。以此來鞏固我們所學到的 Android 應用程式設計知識。


